<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>لوحة تحكم بارت زون</title>
    <link href="https://fonts.googleapis.com/css2?family=Tajawal:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #f97316;
            --dark: #1e293b;
            --light: #f8fafc;
            --danger: #ef4444;
            --success: #10b981;
            --info: #3b82f6;
            --warning: #f59e0b;
        }
        * {
            box-sizing: border-box;
            font-family: 'Tajawal', sans-serif;
        }
        body {
            background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);
            margin: 0;
            padding: 20px;
            min-height: 100vh;
        }
        .container {
            max-width: 100%;
            margin: 0 auto;
        }
        .auth-card, .admin-card {
            background: white;
            border-radius: 10px;
            padding: 25px;
            margin: 20px auto;
            box-shadow: 0 5px 20px rgba(0,0,0,0.08);
            max-width: 600px;
            transition: transform 0.3s ease;
        }
        .admin-card:hover {
            transform: translateY(-5px);
        }
        h1, h2, h3 {
            color: var(--dark);
            text-align: center;
            margin-top: 0;
        }
        h1 {
            background: linear-gradient(45deg, var(--primary), #f59e0b);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            font-size: 2.2rem;
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: var(--dark);
        }
        input, textarea, select {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s;
            background: #f8fafc;
        }
        input:focus, textarea:focus, select:focus {
            border-color: var(--primary);
            outline: none;
            box-shadow: 0 0 0 3px rgba(249, 115, 22, 0.2);
        }
        button {
            background: var(--primary);
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s;
            width: 100%;
            margin-top: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }
        button:hover {
            opacity: 0.9;
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }
        .btn-danger {
            background: var(--danger);
        }
        .btn-success {
            background: var(--success);
        }
        .btn-info {
            background: var(--info);
        }
        .btn-warning {
            background: var(--warning);
        }
        .product-item {
            background: white;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            border-left: 4px solid var(--primary);
            transition: all 0.3s;
        }
        .product-item:hover {
            box-shadow: 0 5px 15px rgba(0,0,0,0.15);
        }
        .product-actions {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }
        .product-actions button {
            width: auto;
            padding: 8px 15px;
            flex: 1;
        }
        #adminPanel {
            display: none;
        }
        .logout-btn {
            background: var(--dark);
            width: auto;
            padding: 10px 25px;
            margin: 0 auto 30px;
            display: block;
            font-size: 1rem;
        }
        .error-message {
            color: var(--danger);
            text-align: center;
            margin-top: 15px;
            padding: 10px;
            background: rgba(239, 68, 68, 0.1);
            border-radius: 8px;
        }
        .success-message {
            color: var(--success);
            text-align: center;
            margin-top: 15px;
            padding: 10px;
            background: rgba(16, 185, 129, 0.1);
            border-radius: 8px;
        }
        .product-image {
            width: 100%;
            max-height: 200px;
            object-fit: contain;
            border-radius: 8px;
            margin: 10px 0;
            border: 1px solid #eee;
            background: #f8fafc;
            padding: 5px;
        }
        .image-upload-info {
            background: #e0f2fe;
            padding: 10px;
            border-radius: 8px;
            margin: 15px 0;
            font-size: 0.9rem;
            color: var(--info);
        }
        .image-upload-info i {
            margin-left: 5px;
        }
        .instructions {
            background: #fffbeb;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
            border-left: 4px solid #f59e0b;
        }
        .instructions h3 {
            margin-top: 0;
            color: #b45309;
        }
        .instructions ol {
            padding-right: 20px;
        }
        .instructions li {
            margin-bottom: 10px;
        }
        .header-logo {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            margin-bottom: 20px;
        }
        .header-logo i {
            font-size: 2.5rem;
            color: var(--primary);
        }
        .empty-state {
            text-align: center;
            padding: 30px;
            color: #64748b;
        }
        .empty-state i {
            font-size: 3rem;
            margin-bottom: 15px;
            color: #cbd5e1;
        }
        .specs-container {
            margin-top: 20px;
        }
        .spec-item {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;
            align-items: center;
        }
        .spec-item input {
            flex: 1;
        }
        .spec-item button {
            width: auto;
            padding: 10px;
        }
        .tabs {
            display: flex;
            margin-bottom: 20px;
            border-bottom: 1px solid #ddd;
        }
        .tab {
            padding: 10px 20px;
            cursor: pointer;
            border-bottom: 3px solid transparent;
            transition: all 0.3s;
        }
        .tab.active {
            border-bottom-color: var(--primary);
            font-weight: bold;
        }
        .tab-content {
            display: none;
        }
        .tab-content.active {
            display: block;
        }
        .edit-specs-btn {
            margin-top: 10px;
        }
        .edit-product-form {
            display: none;
            margin-top: 20px;
            padding: 20px;
            background: #f8fafc;
            border-radius: 8px;
        }
    </style>
</head>
<body>
    <!-- واجهة تسجيل الدخول -->
    <div id="authPanel" class="container">
        <div class="auth-card">
            <div class="header-logo">
                <i class="fas fa-cogs"></i>
                <h1>لوحة تحكم بارت زون</h1>
            </div>
            <div class="form-group">
                <label for="email"><i class="fas fa-envelope"></i> البريد الإلكتروني</label>
                <input type="email" id="email" placeholder="admin@example.com" required>
            </div>
            <div class="form-group">
                <label for="password"><i class="fas fa-lock"></i> كلمة المرور</label>
                <input type="password" id="password" required>
            </div>
            <button onclick="login()"><i class="fas fa-sign-in-alt"></i> دخول إلى لوحة التحكم</button>
            <p id="loginError" class="error-message"></p>
        </div>
    </div>

    <!-- لوحة التحكم -->
    <div id="adminPanel" class="container">
        <div class="header-logo">
            <i class="fas fa-cogs"></i>
            <h1>لوحة تحكم بارت زون</h1>
        </div>
        <button onclick="logout()" class="logout-btn"><i class="fas fa-sign-out-alt"></i> تسجيل الخروج</button>
        
        <div class="tabs">
            <div class="tab active" onclick="openTab('productsTab')">إدارة المنتجات</div>
            <div class="tab" onclick="openTab('categoriesTab')">إدارة الفئات</div>
        </div>
        
        <!-- تبويب المنتجات -->
        <div id="productsTab" class="tab-content active">
            <div class="admin-card">
                <h2><i class="fas fa-plus-circle"></i> إضافة منتج جديد</h2>
                <div class="form-group">
                    <label for="productName"><i class="fas fa-tag"></i> اسم المنتج</label>
                    <input type="text" id="productName" placeholder="مثال: بوجي بارت">
                </div>
                <div class="form-group">
                    <label for="productPrice"><i class="fas fa-money-bill-wave"></i> السعر</label>
                    <input type="text" id="productPrice" placeholder="مثال: 5000 ل.س">
                </div>
                <div class="form-group">
                    <label for="productCategory"><i class="fas fa-list"></i> الفئة</label>
                    <select id="productCategory">
                        <!-- سيتم ملؤها بالجافاسكريبت -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="productDescription"><i class="fas fa-align-left"></i> الوصف (اختياري)</label>
                    <textarea id="productDescription" rows="3"></textarea>
                </div>
                
                <div class="form-group">
                    <label for="productImage"><i class="fas fa-image"></i> رابط الصورة (من استضافة مثل imgbb)</label>
                    <input type="url" id="productImage" placeholder="https://i.ibb.co/...">
                    <div class="image-upload-info">
                        <i class="fas fa-info-circle"></i> يمكنك استخدام خدمات استضافة الصور مثل <strong>imgbb.com</strong> لرفع الصورة والحصول على رابط مباشر
                    </div>
                </div>
                
                <div class="specs-container">
                    <h3><i class="fas fa-list-check"></i> مواصفات المنتج المخصصة</h3>
                    <div id="specsList">
                        <!-- سيتم إضافة حقول المواصفات هنا -->
                    </div>
                    <button onclick="addSpecField()" class="btn-info"><i class="fas fa-plus"></i> إضافة خاصية جديدة</button>
                </div>
                
                <button onclick="addProduct()" class="btn-success"><i class="fas fa-save"></i> حفظ المنتج</button>
                <p id="successMessage" class="success-message"></p>
            </div>

            <div class="admin-card">
                <h2><i class="fas fa-boxes"></i> قائمة المنتجات</h2>
                <div id="productsList">
                    <!-- سيتم عرض المنتجات هنا تلقائيا -->
                </div>
            </div>
        </div>
        
        <!-- تبويب إدارة الفئات -->
        <div id="categoriesTab" class="tab-content">
            <div class="admin-card">
                <h2><i class="fas fa-tags"></i> إدارة فئات المنتجات</h2>
                <p>هنا يمكنك إضافة أو تعديل أو حذف فئات المنتجات</p>
                
                <div class="form-group">
                    <label for="newCategoryName">اسم الفئة الجديدة</label>
                    <input type="text" id="newCategoryName" placeholder="مثال: القطع الهيكلية">
                    <button onclick="addCategory()" class="btn-info"><i class="fas fa-plus"></i> إضافة فئة</button>
                </div>
                
                <div id="categoriesList">
                    <!-- سيتم عرض الفئات هنا -->
                </div>
                
                <p id="categoriesSuccessMessage" class="success-message"></p>
            </div>
        </div>
        
        <div class="instructions">
            <h3><i class="fas fa-graduation-cap"></i> كيفية إضافة صورة للمنتج:</h3>
            <ol>
                <li>اذهب إلى موقع <a href="https://imgbb.com" target="_blank">imgbb.com</a></li>
                <li>انقر على زر "Start Uploading" لاختيار الصورة من جهازك</li>
                <li>بعد الرفع، انسخ الرابط المباشر للصورة (Direct Link)</li>
                <li>الصق الرابط في حقل "رابط الصورة" بالأعلى</li>
                <li>حفظ المنتج ليتم عرض الصورة مع معلوماته</li>
            </ol>
        </div>
    </div>

    <!-- Firebase SDK -->
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-database.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-auth.js"></script>

    <!-- الكود البرمجي -->
    <script>
        // التهيئة باستخدام بياناتك
        const firebaseConfig = {
            apiKey: "AIzaSyARTj0C63mKNHuhp0kxdciczVS4_vMxbJo",
            authDomain: "partzoneadmin.firebaseapp.com",
            databaseURL: "https://partzoneadmin-default-rtdb.firebaseio.com",
            projectId: "partzoneadmin",
            storageBucket: "partzoneadmin.appspot.com",
            messagingSenderId: "714743852681",
            appId: "1:714743852681:web:16b478deb50024952c2058"
        };

        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);
        const database = firebase.database();
        const auth = firebase.auth();

        // ========== متغيرات النظام ========== //
        let defaultCategories = [
            "القطع الهيكلية",
            "قطع المحرك",
            "القطع الإلكترونية والكهربائية",
            "نظام الحركة",
            "المصابيح والإشارات",
            "الإطارات",
            "الزينة والإكسسوارات",
            "القطع العامة",
            "الزيوت"
        ];
        
        // ========== دوال النظام ========== //

        // 1. تسجيل الدخول
        function login() {
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            
            auth.signInWithEmailAndPassword(email, password)
                .then(() => {
                    document.getElementById('authPanel').style.display = 'none';
                    document.getElementById('adminPanel').style.display = 'block';
                    loadProducts();
                    loadCategories();
                })
                .catch(error => {
                    document.getElementById('loginError').textContent = 'خطأ في البريد الإلكتروني أو كلمة المرور';
                    console.error("Error signing in:", error);
                });
        }

        // 2. تسجيل الخروج
        function logout() {
            auth.signOut();
            document.getElementById('authPanel').style.display = 'block';
            document.getElementById('adminPanel').style.display = 'none';
            resetForm();
        }

        // 3. فتح تبويب
        function openTab(tabId) {
            document.querySelectorAll('.tab').forEach(tab => {
                tab.classList.remove('active');
            });
            
            document.querySelectorAll('.tab-content').forEach(content => {
                content.classList.remove('active');
            });
            
            document.querySelector(`.tab[onclick="openTab('${tabId}')"]`).classList.add('active');
            document.getElementById(tabId).classList.add('active');
        }

        // 4. إضافة منتج جديد مع خصائص مخصصة
        function addProduct() {
            const name = document.getElementById('productName').value;
            const price = document.getElementById('productPrice').value;
            const category = document.getElementById('productCategory').value;
            const description = document.getElementById('productDescription').value;
            const imageUrl = document.getElementById('productImage').value;
            
            if (!name || !price) {
                alert('الرجاء إدخال اسم المنتج والسعر');
                return;
            }

            // جمع المواصفات المضافة
            const specifications = {};
            const specInputs = document.querySelectorAll('#specsList .spec-item');
            specInputs.forEach(spec => {
                const key = spec.querySelector('input[name="specName"]').value;
                const value = spec.querySelector('input[name="specValue"]').value;
                if (key && value) {
                    specifications[key] = value;
                }
            });

            database.ref('products').push({
                name: name,
                price: price,
                category: category,
                description: description || '',
                imageUrl: imageUrl || '',
                specifications: specifications,
                createdAt: new Date().toISOString()
            });
            
            // عرض رسالة نجاح
            document.getElementById('successMessage').textContent = 'تم إضافة المنتج بنجاح!';
            setTimeout(() => {
                document.getElementById('successMessage').textContent = '';
            }, 3000);
            
            resetForm();
        }

        // 5. عرض المنتجات مع الصور
        function loadProducts() {
            database.ref('products').on('value', (snapshot) => {
                let html = '';
                if (!snapshot.exists()) {
                    html = `
                        <div class="empty-state">
                            <i class="fas fa-box-open"></i>
                            <h3>لا توجد منتجات</h3>
                            <p>ابدأ بإضافة منتجاتك الأولى</p>
                        </div>
                    `;
                } else {
                    snapshot.forEach(child => {
                        const product = child.val();
                        // التحقق من وجود صورة للمنتج
                        const imageHtml = product.imageUrl 
                            ? `<img src="${product.imageUrl}" alt="${product.name}" class="product-image">` 
                            : '';
                        
                        // عرض المواصفات إذا كانت موجودة
                        let specsHtml = '';
                        if (product.specifications) {
                            specsHtml = '<div style="margin-top: 10px;"><strong>المواصفات:</strong><ul style="margin-right: 20px;">';
                            for (const [key, value] of Object.entries(product.specifications)) {
                                specsHtml += `<li><strong>${key}:</strong> ${value}</li>`;
                            }
                            specsHtml += '</ul></div>';
                        }
                        
                        html += `
                            <div class="product-item" id="product-${child.key}">
                                <h3>${product.name}</h3>
                                <p><strong>السعر:</strong> ${product.price}</p>
                                <p><strong>الفئة:</strong> ${product.category}</p>
                                ${imageHtml}
                                ${product.description ? `<p>${product.description}</p>` : ''}
                                ${specsHtml}
                                <div class="product-actions">
                                    <button onclick="showEditForm('${child.key}')" class="btn-warning"><i class="fas fa-edit"></i> تعديل</button>
                                    <button onclick="deleteProduct('${child.key}')" class="btn-danger"><i class="fas fa-trash"></i> حذف</button>
                                </div>
                                <div id="edit-form-${child.key}" class="edit-product-form">
                                    <h4>تعديل المنتج</h4>
                                    <div class="form-group">
                                        <label>اسم المنتج</label>
                                        <input type="text" id="edit-name-${child.key}" value="${product.name}">
                                    </div>
                                    <div class="form-group">
                                        <label>السعر</label>
                                        <input type="text" id="edit-price-${child.key}" value="${product.price}">
                                    </div>
                                    <div class="form-group">
                                        <label>الفئة</label>
                                        <select id="edit-category-${child.key}">
                                            <!-- سيتم ملؤها بالجافاسكريبت -->
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label>الوصف</label>
                                        <textarea id="edit-description-${child.key}" rows="3">${product.description || ''}</textarea>
                                    </div>
                                    <div class="form-group">
                                        <label>رابط الصورة</label>
                                        <input type="url" id="edit-image-${child.key}" value="${product.imageUrl || ''}">
                                    </div>
                                    <div class="specs-container">
                                        <h4>المواصفات المخصصة</h4>
                                        <div id="edit-specs-${child.key}">
                                            <!-- سيتم ملؤها بالجافاسكريبت -->
                                        </div>
                                        <button onclick="addEditSpecField('${child.key}')" class="btn-info"><i class="fas fa-plus"></i> إضافة خاصية جديدة</button>
                                    </div>
                                    <div class="product-actions">
                                        <button onclick="updateProduct('${child.key}')" class="btn-success"><i class="fas fa-save"></i> حفظ التغييرات</button>
                                        <button onclick="hideEditForm('${child.key}')" class="btn-danger"><i class="fas fa-times"></i> إلغاء</button>
                                    </div>
                                </div>
                            </div>
                        `;
                    });
                }
                document.getElementById('productsList').innerHTML = html;
                
                // ملء قوائم الفئات في نماذج التعديل
                snapshot.forEach(child => {
                    const categorySelect = document.getElementById(`edit-category-${child.key}`);
                    if (categorySelect) {
                        categorySelect.innerHTML = '';
                        defaultCategories.forEach(category => {
                            const option = document.createElement('option');
                            option.value = category;
                            option.textContent = category;
                            if (category === child.val().category) {
                                option.selected = true;
                            }
                            categorySelect.appendChild(option);
                        });
                    }
                    
                    // ملء المواصفات في نماذج التعديل
                    const product = child.val();
                    const specsContainer = document.getElementById(`edit-specs-${child.key}`);
                    if (specsContainer) {
                        specsContainer.innerHTML = '';
                        if (product.specifications) {
                            for (const [key, value] of Object.entries(product.specifications)) {
                                addEditSpecField(child.key, key, value);
                            }
                        }
                    }
                });
            });
        }

        // 6. حذف منتج
        function deleteProduct(id) {
            if(confirm('هل أنت متأكد من حذف هذا المنتج؟ لا يمكن التراجع عن هذه العملية')) {
                database.ref('products/' + id).remove();
            }
        }

        // 7. إعادة تعيين النموذج
        function resetForm() {
            document.getElementById('productName').value = '';
            document.getElementById('productPrice').value = '';
            document.getElementById('productDescription').value = '';
            document.getElementById('productImage').value = '';
            document.getElementById('specsList').innerHTML = '';
        }

        // 8. إضافة حقل خاصية جديد
        function addSpecField(name = '', value = '') {
            const specsList = document.getElementById('specsList');
            const specId = Date.now();
            const specField = document.createElement('div');
            specField.className = 'spec-item';
            specField.innerHTML = `
                <input type="text" name="specName" placeholder="اسم الخاصية (مثال: اللون)" value="${name}">
                <input type="text" name="specValue" placeholder="قيمة الخاصية (مثال: أحمر)" value="${value}">
                <button onclick="removeSpecField('${specId}')" class="btn-danger"><i class="fas fa-trash"></i></button>
            `;
            specField.id = `spec-${specId}`;
            specsList.appendChild(specField);
        }

        // 9. حذف حقل خاصية
        function removeSpecField(id) {
            const specField = document.getElementById(`spec-${id}`);
            if (specField) {
                specField.remove();
            }
        }

        // 10. تحميل الفئات من قاعدة البيانات
        function loadCategories() {
            database.ref('categories').once('value').then(snapshot => {
                const categorySelect = document.getElementById('productCategory');
                categorySelect.innerHTML = '';
                
                if (snapshot.exists()) {
                    defaultCategories = Object.values(snapshot.val());
                }
                
                defaultCategories.forEach(category => {
                    const option = document.createElement('option');
                    option.value = category;
                    option.textContent = category;
                    categorySelect.appendChild(option);
                });
                
                // عرض الفئات في تبويب الإدارة
                displayCategoriesList();
            });
        }

        // 11. عرض قائمة الفئات
        function displayCategoriesList() {
            const categoriesList = document.getElementById('categoriesList');
            categoriesList.innerHTML = '';
            
            defaultCategories.forEach((category, index) => {
                const categoryItem = document.createElement('div');
                categoryItem.className = 'spec-item';
                categoryItem.innerHTML = `
                    <input type="text" value="${category}" id="category-${index}">
                    <button onclick="updateCategory(${index})" class="btn-warning"><i class="fas fa-edit"></i> تعديل</button>
                    <button onclick="deleteCategory(${index})" class="btn-danger"><i class="fas fa-trash"></i> حذف</button>
                `;
                categoriesList.appendChild(categoryItem);
            });
        }

        // 12. إضافة فئة جديدة
        function addCategory() {
            const newCategory = document.getElementById('newCategoryName').value.trim();
            if (!newCategory) {
                alert('الرجاء إدخال اسم الفئة');
                return;
            }
            
            if (defaultCategories.includes(newCategory)) {
                alert('هذه الفئة موجودة بالفعل!');
                return;
            }
            
            defaultCategories.push(newCategory);
            saveCategories();
            document.getElementById('newCategoryName').value = '';
        }

        // 13. تحديث فئة
        function updateCategory(index) {
            const updatedCategory = document.getElementById(`category-${index}`).value.trim();
            if (!updatedCategory) {
                alert('الرجاء إدخال اسم الفئة');
                return;
            }
            
            defaultCategories[index] = updatedCategory;
            saveCategories();
        }

        // 14. حذف فئة
        function deleteCategory(index) {
            if (confirm('هل أنت متأكد من حذف هذه الفئة؟ سيتم حذفها من جميع المنتجات المرتبطة بها.')) {
                defaultCategories.splice(index, 1);
                saveCategories();
            }
        }

        // 15. حفظ الفئات في قاعدة البيانات
        function saveCategories() {
            database.ref('categories').set(defaultCategories)
                .then(() => {
                    document.getElementById('categoriesSuccessMessage').textContent = 'تم حفظ الفئات بنجاح!';
                    setTimeout(() => {
                        document.getElementById('categoriesSuccessMessage').textContent = '';
                    }, 3000);
                    loadCategories();
                });
        }

        // 16. عرض نموذج التعديل
        function showEditForm(productId) {
            document.getElementById(`edit-form-${productId}`).style.display = 'block';
        }

        // 17. إخفاء نموذج التعديل
        function hideEditForm(productId) {
            document.getElementById(`edit-form-${productId}`).style.display = 'none';
        }

        // 18. إضافة حقل خاصية في نموذج التعديل
        function addEditSpecField(productId, name = '', value = '') {
            const specsContainer = document.getElementById(`edit-specs-${productId}`);
            const specId = Date.now();
            const specField = document.createElement('div');
            specField.className = 'spec-item';
            specField.innerHTML = `
                <input type="text" placeholder="اسم الخاصية" value="${name}">
                <input type="text" placeholder="قيمة الخاصية" value="${value}">
                <button onclick="removeEditSpecField('${productId}', '${specId}')" class="btn-danger"><i class="fas fa-trash"></i></button>
            `;
            specField.id = `edit-spec-${productId}-${specId}`;
            specsContainer.appendChild(specField);
        }

        // 19. حذف حقل خاصية في نموذج التعديل
        function removeEditSpecField(productId, specId) {
            const specField = document.getElementById(`edit-spec-${productId}-${specId}`);
            if (specField) {
                specField.remove();
            }
        }

        // 20. تحديث المنتج
        function updateProduct(productId) {
            const name = document.getElementById(`edit-name-${productId}`).value;
            const price = document.getElementById(`edit-price-${productId}`).value;
            const category = document.getElementById(`edit-category-${productId}`).value;
            const description = document.getElementById(`edit-description-${productId}`).value;
            const imageUrl = document.getElementById(`edit-image-${productId}`).value;
            
            if (!name || !price) {
                alert('الرجاء إدخال اسم المنتج والسعر');
                return;
            }

            // جمع المواصفات المضافة
            const specifications = {};
            const specInputs = document.querySelectorAll(`#edit-specs-${productId} .spec-item`);
            specInputs.forEach(spec => {
                const key = spec.querySelector('input:first-child').value;
                const value = spec.querySelector('input:nth-child(2)').value;
                if (key && value) {
                    specifications[key] = value;
                }
            });

            database.ref('products/' + productId).update({
                name: name,
                price: price,
                category: category,
                description: description || '',
                imageUrl: imageUrl || '',
                specifications: specifications
            });
            
            // إخفاء نموذج التعديل
            hideEditForm(productId);
            
            // عرض رسالة نجاح
            const successMessage = document.createElement('div');
            successMessage.className = 'success-message';
            successMessage.textContent = 'تم تحديث المنتج بنجاح!';
            document.getElementById(`product-${productId}`).appendChild(successMessage);
            
            setTimeout(() => {
                successMessage.remove();
            }, 3000);
        }

        // 21. تتبع حالة المستخدم
        auth.onAuthStateChanged(user => {
            if (user) {
                document.getElementById('authPanel').style.display = 'none';
                document.getElementById('adminPanel').style.display = 'block';
                loadProducts();
                loadCategories();
            } else {
                document.getElementById('authPanel').style.display = 'block';
                document.getElementById('adminPanel').style.display = 'none';
            }
        });
    </script>
</body>
</html>
